# Tensorflow/Jupyter StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: tensorflow
  namespace: example
spec:
  selector:
    matchLabels:
      pod: tensorflow-pod
  serviceName: tensorflow
  replicas: 1
  template:
    metadata:
      annotations:
        gke-gcsfuse/volumes: "true"
        gke-gcsfuse/cpu-limit: 500m
        gke-gcsfuse/memory-limit: 10Gi
        gke-gcsfuse/ephemeral-storage-limit: 10Gi
      labels:
        pod: tensorflow-pod
    spec:
      serviceAccountName: gcsfuse-ksa
      nodeSelector:
        cloud.google.com/gke-accelerator: nvidia-tesla-t4
      terminationGracePeriodSeconds: 30
      containers:
      - name: tensorflow-container
        securityContext:
          privileged: true
        image: tensorflow/tensorflow:latest-gpu-jupyter
        volumeMounts:
        - name: tensorflow-pvc
          mountPath: /tf/saved
        resources:
            limits:
              nvidia.com/gpu: "1"
              ephemeral-storage: 10Gi
              memory: 10Gi
            requests:
              nvidia.com/gpu: "1"
              ephemeral-storage: 10Gi
              memory: 10Gi
      volumes:
      - name: tensorflow-pvc
        csi:
          driver: gcsfuse.csi.storage.gke.io
          volumeAttributes:
            bucketName: test-gcsfuse-1
## Optional: override and set your own token
#        env:
#          - name: JUPYTER_TOKEN
#            value: "jupyter"
---
# Headless service for the above StatefulSet
apiVersion: v1
kind: Service
metadata:
  name: tensorflow
spec:
  ports:
  - port: 8888
  clusterIP: None
  selector:
    pod: tensorflow-pod
---
# External service
apiVersion: "v1"
kind: "Service"
metadata:
  name: tensorflow-jupyter
spec:
  ports:
  - protocol: "TCP"
    port: 80
    targetPort: 8888
  selector:
    pod: tensorflow-pod
  type: LoadBalancer